## python -m pip install pygame
import pygame

###~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# با دستور بالا ابتدا پای-گیم را نصب کنید

###~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# پای-گیم یک موتور بازی است. از آن استفاده کرده ایم تا جای چند توپ 
# در صفحه را نمایش دهیم - ابتدا یک پنجره برای بازی میسازیم و سایز
# آن را مشخص میکنیم
screen = pygame.display.set_mode((500, 500))
clock = pygame.time.Clock()

###~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# یک کلاس برای توپ ساخته ایم تا اطلاعات توپ از جمله جای آن در صفحه
# سایز و رنگ آن را نگه داری کند
class Ball:
    x = 250
    y = 250
    size = 10
    color = "green"

###~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# تمرین ۱
# فرض کنید کلاس توپ بجز مکان، رنگ و سایز، یک ویژگی دیگر مثل شماره
# هم دارد. این ویژگی جدید را نیز به به کلاس توپ اضافه کنید


###~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# یک حلقه بینهایت داریم که پشت سر هم، رویدادهای بازی، منطق بازی و
# رسم صفحه بازی را کنترل میکند - تا زمانی این حلقه ادامه پیدا میکند
# که با شرطی از آن خارج شویم
done = False
while not done:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            done = True

    # Making balls in loop over and over like this is a BAD PRACTICE
    # But i made it like this just to teach something
    ###~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    # یک توپ میسازیم و مشخصات آن را تنظیم میکنیم
    my_ball1 = Ball()
    my_ball1.x = 100
    my_ball1.y = 100
    my_ball1.size = 20
    my_ball1.color = "pink"

    ###~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    # یک توپ دیگر میسازیم و مشخصات آن را تنظیم میکنیم
    # مشخصاتی که تغییر نمیدهیم به همان صورت پیشفرض کلاس خواهند بود
    my_ball2 = Ball()
    my_ball2.x = 400

    ###~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    # توپ سوم را میسازیم
    my_ball3 = Ball()
    my_ball3.y = 400
    my_ball3.size = 30

    ###~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    # توپ چهارم را میسازیم
    # تمرین ۲
    # برای کلاس توپ یک متد سازنده بسازید تا بتوانید اطلاعات توپ را
    # در زمان ساخت توپ مشخص کنید. یعنی کلاس را به شکلی تغییر دهید
    # که بتوانید یک نسخه از توپ را به شکل زیر بسازید
    # b = Ball(200,200,20,"yellow")
    my_ball4 = Ball()
    my_ball4.color = "red"

    ###~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    # توپ ها را در صفحه بازی رسم میکنیم

    pygame.draw.circle(screen, my_ball1.color, (my_ball1.x, my_ball1.y), my_ball1.size)
    pygame.draw.circle(screen, my_ball2.color, (my_ball2.x, my_ball2.y), my_ball2.size)
    pygame.draw.circle(screen, my_ball3.color, (my_ball3.x, my_ball3.y), my_ball3.size)
    pygame.draw.circle(screen, my_ball4.color, (my_ball4.x, my_ball4.y), my_ball4.size)
    pygame.display.update()


    ###~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    # تمرین ۳
    # برنامه را به شکلی تغییر دهید که ۱۰ توپ تصادفی در نقاطی تصادفی
    # از صفحه ساخته شده و نمایش داده شود
    # دقت کنید - تمرین آخر تمرین ساده ای نیست - از ماژول رندم استفاده
    # کنید - برای راهنمایی از مثالها کمک بگیرید
