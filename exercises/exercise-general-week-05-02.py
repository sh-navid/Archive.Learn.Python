my_characters = []

###~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# یک کلاس ساخته ایم تا حروف انگلیسی بزرگ و اعداد متناظر با آنها را
# ذخیره کرده و در صورت نیاز نمایش دهیم
class Character:
    def __init__(self, ch, no):
        self.ch = ch
        self.no = no

    # سوال ۱
    # این متد چه کاری انجام میدهد؟ اگر آن را حذف کنیم در خروجی
    # چه تغییری رخ میدهد
    def __str__(self) -> str:
        return f"Character: {self.ch} - {self.no}"

    # سوال ۲
    # این متد چه کاری انجام میدهد؟ اگر آن را حذف کنیم در خروجی
    # چه تغییری رخ میدهد
    def __repr__(self) -> str:
        # object representation in string format
        return f"Ch: {self.ch} - {self.no}"


###~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# تمرین ۱
# بازه اعداد را به شکلی تغییر دهید که حروف کوچک در لیست ما نمایش
# داده شوند
for counter in range(65, 91):
    my_characters.append(Character(chr(counter), counter))

print(my_characters)

###~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# تمرین ۲
# قطعه کد زیر را از حالت کامنت خارج کنید و اجرا کنید
"""
for character in my_characters:
    print(character)
"""

###~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# سوال ۳
# سپس در مرحله بعدی متد
# __str__
# را حذف کنید و دوباره از کدی که کامنت شده اجرا بگیرید
# آیا میتوانید تحلیل کنید چه اتفاقی رخ میدهد؟

###~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# سوال ۴
# سپس در مرحله بعدی هر دو متد
# __str__
# و
# __repr__
# را حذف کنید و دوباره از کدی که کامنت شده اجرا بگیرید
# آیا میتوانید تحلیل کنید چه اتفاقی رخ میدهد؟
